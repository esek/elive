generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Service {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  statusUrl String            @map("status_url")
  method    Method
  type      ServiceStatusType
  parser    String? // used to try to get an actual value from the siteUrl

  // overrides
  successOverride String? @map("success_string")
  errorOverride   String? @map("error_string")

  button ServiceButtonOptions?

  headers RequestHeader[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("services")
}

model ServiceButtonOptions {
  id    Int    @id @default(autoincrement())
  label String

  successColor String? @map("success_color")
  errorColor   String? @map("error_color")

  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId Int     @unique @map("service_id")
}

model RequestHeader {
  id Int @id @default(autoincrement())

  key   String
  value String

  serviceStatus   Service @relation(fields: [serviceStatusId], references: [id], onDelete: Cascade)
  serviceStatusId Int     @unique @map("service_status_id")

  @@map("status_headers")
}

enum ServiceStatusType {
  JSON
  XML
  YAML
}

enum Method {
  GET
  POST
  PUT
  DELETE
  PATCH
}
